openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'The email of the user.'
                  example: john@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user.'
                  example: secret123
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The password confirmation.'
                  example: secret123
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: thalia.mertz@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: '.NpW#''9;|egjb'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/Admin-documents:
    get:
      summary: ''
      operationId: getApiAdminDocuments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiAdminDocuments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wqogoaffqguzngmnnjyw
                  nullable: false
                content:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: false
                category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the categories table.'
                  example: et
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - title
                - content
                - category_id
  '/api/Admin-documents/{id}':
    get:
      summary: ''
      operationId: getApiAdminDocumentsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiAdminDocumentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: duu
                  nullable: false
                content:
                  type: string
                  description: ''
                  example: in
                  nullable: false
                category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the categories table.'
                  example: est
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - title
                - content
                - category_id
    delete:
      summary: ''
      operationId: deleteApiAdminDocumentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the Admin document.'
        example: delectus
        required: true
        schema:
          type: string
  /api/categories:
    get:
      summary: ''
      operationId: getApiCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiCategories
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bx
                  nullable: false
              required:
                - name
  '/api/categories/{id}':
    get:
      summary: ''
      operationId: getApiCategoriesId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: ''
      operationId: putApiCategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qiosbonzvesmdquggbnz
                  nullable: false
              required:
                - name
    delete:
      summary: ''
      operationId: deleteApiCategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: et
        required: true
        schema:
          type: string
  /api/document:
    post:
      summary: ''
      operationId: postApiDocument
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mcvtpzmpgfopjubdm
                  nullable: false
                contents:
                  type: string
                  description: ''
                  example: libero
                  nullable: false
                category_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the categories table.'
                  example: iste
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
              required:
                - title
                - contents
                - category_id
  /api/categorie:
    get:
      summary: ''
      operationId: getApiCategorie
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/users:
    get:
      summary: ''
      operationId: getApiUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiUsers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zswd
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: rmetz@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '}o"RqnTtlz]"u'
                  nullable: false
                role:
                  type: string
                  description: 'The <code>name</code> of an existing record in the roles table.'
                  example: perferendis
                  nullable: false
              required:
                - name
                - email
                - password
                - role
  '/api/users/{user_id}':
    put:
      summary: ''
      operationId: putApiUsersUser_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vwqnggqueuagpaiyidyglptmi
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                role:
                  type: string
                  description: 'The <code>name</code> of an existing record in the roles table.'
                  example: autem
                  nullable: false
              required:
                - name
                - role
    delete:
      summary: ''
      operationId: deleteApiUsersUser_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/roles:
    get:
      summary: ''
      operationId: getApiRoles
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
